<%-include("header-main")-%>


      </nav>
      <nav class="container">
        <div class="table-title">
          <h6><i class="bi bi-person-fill"></i> Logged in as: <b><%=user.name %></b></h6>
      
      </div>
        <div id="news-cards" class="container">

        </div>
      </nav>
      <nav id="nav-pad" class="container navbar navbar-dark">
        <div class="container justify-content-space-between">
          <span class="justify-content-start" id="date"></span>
          <form id="search-tokens"class="d-flex" role="search">
            <input
              id="param"
              class="form-control me-2"
              type="search"
              placeholder="Search token name.."
              aria-label="Search"
            />
            <button for="param" class="btn btn-primary" type="submit">Search</button>
          </form>
        </div>
      </nav>
    </header>
    <main>
      <section class="asset-list container table-responsive-sm">
        <table class="table-body table table-dark table-hover table-lg">
          <thead>
            <tr id="stickRow">
              <td id="stickTable">#</td>
              <td id="stickTable">Name</td>
              <td id="stickTable">Price</td>
              <td id="stickTable">24h%</td>
              <td id="stickTable">ATH</td>
              <td id="stickTable">Marketcap</td>
            </tr>
          </thead>
          <tbody></tbody>
        </table>
      </section>
  
    </main>

    <script>
      
      //Fetch asset prices from Coingecko
fetch(
    "https://api.coingecko.com/api/v3/coins/markets?vs_currency=gbp&order=market_cap_desc&per_page=100&page=1&sparkline=false&price_change_percentage=24h"
  )
    .then((data) => {
      return data.json(); // Convert Promsie to an Object
    })
    .then((objectData) => {
      let tableData = "";
      //Iterate through object and append data to table
      objectData.map((values) => {
        tableData += `<tr>
        <td>${values.market_cap_rank}</td>
        <td><img id="img-logo" src="${values.image}">  ${values.name}</td>
        <td>£${values.current_price.toLocaleString("en-US")}</td>
        <td class="text-success">${parseFloat(values.price_change_percentage_24h).toFixed(2)}%</td>
        <td>£${values.ath.toLocaleString("en-US")}</td>
        <td>£${values.market_cap.toLocaleString("en-US")}</td>
        </tr>`;
      });
  
      document.querySelector("tbody").innerHTML = tableData;
    })
    .then(() => {
      //Check for negative value
      const pCheck = document.querySelectorAll(".text-success");
      for (let i = 0; i < pCheck.length; i++) {
        if (pCheck[i].innerHTML.includes("-")) {
          pCheck[i].className = "text-danger";
        }
      }
    });
  
  //Get time
  const date = new Date();
  document.getElementById("date").innerHTML = date.toGMTString();
  
  
  fetch(
    "https://newsdata.io/api/1/news?apikey=pub_1186204cddda4e3240053ffd74370bde06bf1&q=blockchain%20OR%20ledger&language=en ")
    .then((data) => {
      return data.json();
    })
    .then((objectData) => {
      newsData = "";
      // console.log(objectData.results);
      objectData.results.map((values) => {
        
        if (values.image_url) {
          newsData += `<div class="card">
          <img class="card-img-top" src="${values.image_url}" alt="">
          <div class="card-body">
            <a href='${values.link}'>
              <p class="card-text">${values.title}</p>
            </a>
        </div>
          
        </div>`;

        }
        
      });
  
      // console.log(listData);
  
      document.querySelector("#news-cards").innerHTML = newsData;
    });
  
  //EVENT LISTENER TO SUBMIT INPUT AND FETCH COIN GECKO API
  const searchTokens = document.querySelector("#search-tokens");
  searchTokens.addEventListener("submit", (e) => {
    //
    let param = document.getElementById("param").value;

    //API TOKEN NAME CALL ERRORS
    if(param === "quant"){
      param = "quant-network";
            } else if (param.toLowerCase() === "xrp"){
              param = "ripple";
            } else if (param.includes(" ")) {
              param = param.replace(" ", "-");
            }


    fetch(
      `https://api.coingecko.com/api/v3/coins/markets?vs_currency=gbp&ids=${param.toLowerCase()}&order=market_cap_desc&per_page=100&page=1&sparkline=false`
    )
      .then((data) => {
        return data.json();
      })
      .then((objectData) => {
        objectData.map((values) => {
          let tableData = "";
          //Iterate through object and append data to table
          objectData.map((values) => {
            tableData += `<tr>
        <td>${values.market_cap_rank}</td>
        <td><img id="img-logo"src="${values.image}">  ${values.name}</td>
        <td>£${values.current_price.toLocaleString("en-US")}</td>
        <td class="text-success">${parseFloat(values.price_change_percentage_24h).toFixed(2)}%</td>
        <td>£${values.ath.toLocaleString("en-US")}</td>
        <td>£${values.market_cap.toLocaleString("en-US")}</td>
        </tr>`;
          });
          console.log(tableData)
          document.querySelector("tbody").innerHTML = tableData;
        });
      }).then(() => {
      //Check for negative value
      const pCheck = document.querySelectorAll(".text-success");
      for (let i = 0; i < pCheck.length; i++) {
        if (pCheck[i].innerHTML.includes("-")) {
          pCheck[i].className = "text-danger";
        }
      }
    });
    e.preventDefault();
  });
  

    </script>
    <footer class="container">
    <div class="foot">
      <div class="foot-gecko">Powered by CoinGecko
        <img id="img-logo" src="/coingecko_logo_without_text.png" /></div>
      
      <p id="news-text">Latest News Updates <span>(Powered by newsdata.io)</span></p>
    </div>
  </footer>


<%-include("footer")-%>